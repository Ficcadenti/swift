#!/usr/bin/perl
#
#	ut_xrttdrss
#
#       0.1.0  04/08/2004 - CS First working version
#       0.1.1  14/02/2006 - BS Adapted for xrttdrss2 task
#       0.1.2  15/02/2006 -    Modified input and output filename
#       0.1.2  06/03/2006 -    Added new input parameter 'outpcfile1' 
#                              and move 'outpcfile' to 'outpcfile2'

use strict;
use ut_xrtobj;

# main
{
# Object Istances
    my $ut = ut_xrtobj->new(
			    name    => "xrttdrss2",
			    utname  => "ut_xrttdrss2",
			    version => "0.1.3",
			    );
    
# Set Parameter
    #$ut->setParam("validate", 0);
    my $input = $ut->getParam("input_dir");
    my $output = $ut->getParam("output_dir") . "/" . $ut->getParam("utname");
    $ut->setParam("output_dir",$output);
    my $chat = $ut->getParam("chatter");
    my $clobber = $ut->getParam("clobber");

# I/O Directory Check
   $ut->checkIODirectory()
        if $ut->isValid;

# Environment check
   my @chk_env = ("LHEASOFT", "HEADAS", "CALDB");

   $ut->checkEnvironment(@chk_env)
        if $ut->isValid;

    my $ArchDir="ut_xrttdrss2";

# Input Files Check
   my @chk_inp = ("$input/$ArchDir/xrt_tdrssim_raw.fits",
                  "$input/$ArchDir/xrt_tdrssevt_raw.fits");

   $ut->checkExist("Input", @chk_inp)
        if $ut->isValid;

# Prototype Check
    my @chk_proto = ("$input/$ArchDir/ut_xrttdrss2_im_proc.fits",
		     "$input/$ArchDir/ut_xrttdrss2_evt_proc1.fits",
		     "$input/$ArchDir/ut_xrttdrss2_evt_proc2.fits");
 
    $ut->checkExist("Prototype", @chk_proto)
        if $ut->isValid;

# Executables Files Check
    my @chk_exe = ("xrttdrss2","ftdiff","fverify", "pquery2");

    $ut->checkExecutable(@chk_exe)
        if $ut->isValid;

# Task Files Check
    my %par_task = (
		    imfile     => "$input/$ArchDir/xrt_tdrssim_raw.fits",
		    pcfile     => "$input/$ArchDir/xrt_tdrssevt_raw.fits",
		    attfile    => "NONE",
		    outimfile  => "$output/xrt_tdrssim_proc.fits",
		    outpcfile1  => "$output/xrt_tdrssevt_proc1.fits",
		    outpcfile2  => "$output/xrt_tdrssevt_proc2.fits",
		    cleanbp    => "yes",
		    subimbias  => "no",
		    maxtemp    => 0.0,
		    method     => "AREA",
		    teldef     => "CALDB",
		    clobber       => "$clobber",
		    chatter       => $chat,
		    history       => "yes",
		    cleanup       => "yes",
		    interpolation => "CONSTANT",
		    
		    );

   $ut->runTask(%par_task)
        if $ut->isValid;

   if ($ut->isValid)
   {
# fverify
       $ut->fverify("$output/xrt_tdrssim_proc.fits");
       $ut->fverify("$output/xrt_tdrssevt_proc1.fits");
       $ut->fverify("$output/xrt_tdrssevt_proc2.fits");
       
# ftdiff
       $ut->ftdiff("$output/xrt_tdrssim_proc.fits",
		   "$input/$ArchDir/ut_xrttdrss2_im_proc.fits");
       
       $ut->ftdiff("$output/xrt_tdrssevt_proc1.fits",
		   "$input/$ArchDir/ut_xrttdrss2_evt_proc1.fits");

       $ut->ftdiff("$output/xrt_tdrssevt_proc2.fits",
		   "$input/$ArchDir/ut_xrttdrss2_evt_proc2.fits");
   }
   
    $ut->delete();
}
