#!/usr/bin/perl -w
#
# ut_xrtgrblcspec
#
# Modification History:
#
#       2008-10-08: V1.0 initial version, adapted from ut_xrtgrblc
#
use strict;
use ut_xrtobj;

# main
{
# Object Istances
    my $ut = ut_xrtobj->new(
			     name    => "xrtgrblcspec",
			     utname  => "ut_xrtgrblcspec",
			     version => "1.0",
			    );
    
# Set Parameters
    my $input   = $ut->getParam( "input_dir" );
    my $output  = $ut->getParam( "output_dir" ) . "/" . $ut->getParam( "utname" );
    my $chat    = $ut->getParam( "chatter" );
    my $clobber = $ut->getParam( "clobber" );

    $ut->setParam( "output_dir", $output ); 
    

# I/O Directory Check
    $ut->checkIODirectory( )
        if $ut->isValid;

# Environment check
    my @chk_env = ( "LHEASOFT", "HEADAS", "CALDB" );
 
    $ut->checkEnvironment( @chk_env )
        if $ut->isValid;
    
    my $RealInDir = "ut_xrtgrblcspec";
    my $ArchDir   = "ut_xrtgrblcspec/prototypes";
    
    my @proto = (
                  "GRB050318_fitinfo.fits",
                  "GRB050318_xpcetbgtt.pha",
                  "GRB050318_xpcetsrtt.arf",
                  "GRB050318_xpcetsrtt.pha",
                 );

# Input Files Check
    my @chk_inp = (
"$input/$RealInDir/GRB050318_xpcetsra.lc.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_01_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_01_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_01.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_01.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_01_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_02_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_02_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_02.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_02.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_02_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_03_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_03_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_03.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_03.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_03_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_04_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_04_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_04.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_04.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_04_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_05_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_05_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_05.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_05.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_05_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_06_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_06_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_06.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_06.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_06_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_07_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_07_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_07.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_07.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_07_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_08_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_08_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_08.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_08.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_08_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_09_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_09_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_09.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_09.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_09_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_10_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_10_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_10.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_10.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_10_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_11_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_11_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_11.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_11.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_11_psf.arf.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_12_bkg.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_12_bkg.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_12.evt.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_12.pha.gz",
"$input/$RealInDir/00111529000_PCW4/GRB050318_00111529000_pcw4_12_psf.arf.gz"
		   );

    $ut->checkExist( "Input", @chk_inp )
	if $ut->isValid;
    
# Prototype Check
    $ut->checkExist( "Prototype", map( "$input/$ArchDir/$_.gz", @proto ) )
        if $ut->isValid;

# Executables Files Check
    my @chk_exe = ( "xrtgrblcspec", "ftdiff", "fverify", "pquery2" );
    $ut->checkExecutable( @chk_exe )
        if $ut->isValid;

# Task Files Check
    my %par_task = (
        indir       => "$input/$RealInDir",
        instem      => "GRB050318",
        outdir      => "$output/output",
        outstem     => 'GRB050318',
        trigtime    => 0.0,
        minenergy   => 0.3,
        maxenergy   => 10.0,
        minwtphacts => 0,
        minpcphacts => 0,
        autospecfit => 'yes',
        nhmap       => 0,
        srcra       => 49.7125,
        srcdec      => -46.39556,
        interactive => 'no',
        plotftype   => '/gif',
        brkfrac1    => 0.5,
        brkfrac2    => 0.01,
        brkfrac3    => 0.001,
        chatter     => $chat,
        clobber     => "$clobber",
        cleanup     => 'yes',
        history     => 'no'
    );

    $ut->runTask( %par_task )
        if $ut->isValid;
        
    if ( $ut->isValid ) {
	
# fverify
        $output .= "/output";
        foreach my $output ( map( "$output/$_", @proto ) ) {
            $ut->fverify( $output );
        }
	
# ftdiff
        foreach my $list ( map( [ "$output/$_", "$input/$ArchDir/$_.gz" ], @proto ) ) {
            $ut->ftdiff( @$list );
        }
    }    
    
    $ut->delete( );
}
