#!/usr/bin/perl
#
#  ut_xrtscreen_pc
#
#
#
# Changes:
#           0.1.0 - 04/08/2004 - CS First working version
#           0.1.1 - 05/08/2004 - BS Adapted for xrtscreen task
#           0.1.2 - 09/08/2004 - BS bug fixed
#           0.1.3 - 05/10/2004 - FT Changed 'gtiexpr' value to 'DEFAULT'
#                                   changed evtrange CALDB file name
#           0.1.4 - 13/01/2005 - BS Deleted 'caldbdir' input parameter 
#           0.1.5 - 21/03/2005 - FT Added 'obsmodescreen' input parameter
#                                   and changed dataset
#           0.1.6 - 09/03/2007 - NS Added 'acsscreen' input parameter

use strict;
use ut_xrtobj;

# main
{
# Object Istances
    my $ut = ut_xrtobj->new(
			    name    => "xrtscreen",
			    utname  => "ut_xrtscreen_pc",
			    version => "0.1.6",
			    );
    
# Set Parameter
    #$ut->setParam("validate", 0);
    my $input = $ut->getParam("input_dir");
    my $output = $ut->getParam("output_dir") . "/" . $ut->getParam("utname");
    $ut->setParam("output_dir",$output);
    my $chat = $ut->getParam("chatter");
    my $clobber = $ut->getParam("clobber");


# I/O Directory Check
    $ut->checkIODirectory()
        if $ut->isValid;

# Environment check
    my @chk_env = ("LHEASOFT", "HEADAS", "CALDB");

    $ut->checkEnvironment(@chk_env)
        if $ut->isValid;
    

    my $headas=$ENV{'HEADAS'};
    my $ArchDir="ut_xrtscreen";
    
    
# Input Files Check
    my @chk_inp = ("$input/$ArchDir/sw00065952002xpcw2po_uf.evt.gz",
		   "$input/$ArchDir/sw00065952002s.mkf"
		   );

    $ut->checkExist("Input", @chk_inp)
	if $ut->isValid;
    
# Prototype Check
   my @chk_proto = ("$input/$ArchDir/ut_xrtscreen_pcwnpogti.fits",
		    "$input/$ArchDir/ut_xrtscreen_pcwnpocl.evt"
		    );
    $ut->checkExist("Prototype", @chk_proto)
        if $ut->isValid;

# Executables Files Check
    my @chk_exe = ("xrtscreen","maketime", "xselect", "fselect", "ftchecksum","ftdiff","fverify", "pquery2");
    $ut->checkExecutable(@chk_exe)
        if $ut->isValid;
# Task Files Check
    my %par_task = (

		    gtiexpr       => "DEFAULT",
		    exprgrade     => "DEFAULT",
		    expr          => "DEFAULT",
		    infile        => "$input/$ArchDir/sw00065952002xpcw2po_uf.evt.gz",
		    outdir        => "$output",
		    chatter       => $chat,
		    clobber       => "$clobber",
		    history       => "yes", 
		    createattgti  => "yes",
                    createinstrgti=> "yes",
                    gtiscreen     => "yes",
                    evtscreen     => "yes",
                    acsscreen     => "no",
		    obsmodescreen => "yes",
		    mkffile       => "$input/$ArchDir/sw00065952002s.mkf",
                    gtifile       => "DEFAULT",
		    usrgtifile    => "NONE",
		    hkrangefile   => "CALDB",
                    timecol       => "TIME",
                    outfile       => "DEFAULT",
                    gtiext        => "GTI",
                    evtrangefile  => "CALDB",
                    cleanup       => "yes"		    
		    );

    $ut->runTask(%par_task)
	if $ut->isValid;
    
# fverify

    if($ut->isValid)
    {
	$ut->fverify("$output/sw00065952002xpcw2po_cl.evt");
	$ut->fverify("$output/sw00065952002xpcw2po_ufgti.fits");
# ftdiff
	$ut->ftdiff("$output/sw00065952002xpcw2po_cl.evt",
		    "$input/$ArchDir/ut_xrtscreen_pcwnpocl.evt");
	$ut->ftdiff("$output/sw00065952002xpcw2po_ufgti.fits",
		    "$input/$ArchDir/ut_xrtscreen_pcwnpogti.fits");
    }
    
    $ut->delete();
}
