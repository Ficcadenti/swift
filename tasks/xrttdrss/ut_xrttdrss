#!/usr/bin/perl
#
#	ut_xrttdrss
#
#       0.1.0  04/08/2004 - CS First working version
#       0.1.2  05/08/2004 - BS Adapted for xrttdrss task
#       0.1.3  20/10/2005 -    Added 'dnthr' new input parameter
#

use strict;
use ut_xrtobj;

# main
{
# Object Istances
    my $ut = ut_xrtobj->new(
			    name    => "xrttdrss",
			    utname  => "ut_xrttdrss",
			    version => "0.1.3",
			    );
    
# Set Parameter
    #$ut->setParam("validate", 0);
    my $input = $ut->getParam("input_dir");
    my $output = $ut->getParam("output_dir") . "/" . $ut->getParam("utname");
    $ut->setParam("output_dir",$output);
    my $chat = $ut->getParam("chatter");
    my $clobber = $ut->getParam("clobber");

# I/O Directory Check
   $ut->checkIODirectory()
        if $ut->isValid;

# Environment check
   my @chk_env = ("LHEASOFT", "HEADAS", "CALDB");

   $ut->checkEnvironment(@chk_env)
        if $ut->isValid;

    my $ArchDir="ut_xrttdrss";

# Input Files Check
   my @chk_inp = ("$input/$ArchDir/xrt_raw_image.fits",
                  "$input/$ArchDir/xrt_raw_spec1.fits",
                  "$input/$ArchDir/xrt_raw_spec2.fits");

   $ut->checkExist("Input", @chk_inp)
        if $ut->isValid;

# Prototype Check
    my @chk_proto = ("$input/$ArchDir/ut_xrttdrss_proc_image.fits",
		     "$input/$ArchDir/ut_xrttdrss_proc_spec1.fits",
		     "$input/$ArchDir/ut_xrttdrss_proc_spec2.fits",
		     "$input/$ArchDir/ut_xrttdrss_raw_imagedet.fits");
 
    $ut->checkExist("Prototype", @chk_proto)
        if $ut->isValid;

# Executables Files Check
    my @chk_exe = ("xrttdrss","ftdiff","fverify", "pquery2");

    $ut->checkExecutable(@chk_exe)
        if $ut->isValid;

# Task Files Check
    my %par_task = (
		    imagefile     => "$input/$ArchDir/xrt_raw_image.fits",
		    spec1file     => "$input/$ArchDir/xrt_raw_spec1.fits",
		    spec2file     => "$input/$ArchDir/xrt_raw_spec2.fits",
		    history       => "yes",
		    outimagefile  => "$output/xrt_proc_image.fits",
		    outspec1file  => "$output/xrt_proc_spec1.fits",
		    outspec2file  => "$output/xrt_proc_spec2.fits",
		    tmpspec1file  => "$output/xrt_raw_spec1temp.fits",
		    imbias        => -1,
		    pdbias        => -1,
		    convfact      => 2.42e-12,
		    posfile       => "CALDB",
		    imbiasfile    => "CALDB",
		    pdbiasfile    => "CALDB",
		    dnthr         => 9,
		    chatter       => $chat,
		    clobber       => "$clobber",
		    cleanup       => "no",
   );

   $ut->runTask(%par_task)
        if $ut->isValid;

   if ($ut->isValid)
   {
# fverify
       $ut->fverify("$output/xrt_proc_image.fits");
       $ut->fverify("$output/xrt_proc_spec1.fits");
       $ut->fverify("$output/xrt_proc_spec2.fits");
       
# ftdiff
       $ut->ftdiff("$output/xrt_proc_image.fits",
		   "$input/$ArchDir/ut_xrttdrss_proc_image.fits");
       
       $ut->ftdiff("$output/xrt_proc_spec1.fits",
		   "$input/$ArchDir/ut_xrttdrss_proc_spec1.fits");
       $ut->ftdiff("$output/xrt_proc_spec2.fits",
		   "$input/$ArchDir/ut_xrttdrss_proc_spec2.fits");
       $ut->ftdiff("$output/xrt_raw_imagedet.fits",
		   "$input/$ArchDir/ut_xrttdrss_raw_imagedet.fits");
   }
   
    $ut->delete();
}
