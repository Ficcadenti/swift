#!/usr/bin/perl
#
#  ut_xrttam
#
#
#
# Changes:
#           0.1.0 - 04/08/2004 - CS First working version
#           0.1.1 - 05/08/2004 - Adapted for xrttam task
#           0.1.2 - 13/01/2005 - Deleted 'caldbdir' input parameter
#           0.1.3 - 21/01/2005 - Deleted 'ledfile' input parameter
#           0.1.4 - 09/09/2005 - Added 'interpolation' and 'alignfile'
#                                new 'attcombine' input parameter 
use strict;
use ut_xrtobj;

# main
{
# Object Istances
    my $ut = ut_xrtobj->new(
			    name    => "xrttam",
			    utname  => "ut_xrttam",
			    version => "0.1.4",
			    );
    
# Set Parameter
    #$ut->setParam("validate", 0);
    my $input = $ut->getParam("input_dir");
    my $output = $ut->getParam("output_dir") . "/" . $ut->getParam("utname");
    $ut->setParam("output_dir",$output);
    my $chat = $ut->getParam("chatter");
    my $clobber = $ut->getParam("clobber");


# I/O Directory Check
    $ut->checkIODirectory()
        if $ut->isValid;

# Environment check
    my @chk_env = ("LHEASOFT", "HEADAS", "CALDB");

    $ut->checkEnvironment(@chk_env)
        if $ut->isValid;
    
    my $headas=$ENV{'HEADAS'};
    my $ArchDir="ut_xrttam";
    
    
# Input Files Check
    my @chk_inp = ("$input/$ArchDir/sw00000003263sat.fits.gz",
		   "$input/$ArchDir/sw00000003263xhd.hk.gz");

    $ut->checkExist("Input", @chk_inp)
	if $ut->isValid;
    
# Prototype Check
   my @chk_proto = ("$input/$ArchDir/ut_xrttamsattm.fits",
                    "$input/$ArchDir/ut_xrttamtmdtcr.fits",
		    );
    $ut->checkExist("Prototype", @chk_proto)
        if $ut->isValid;

# Executables Files Check
    my @chk_exe = ("xrttam","det2att","attcombine", "ftdiff","fverify", "pquery2");
    $ut->checkExecutable(@chk_exe)
        if $ut->isValid;


# Task Files Check
    my %par_task = (
		    
		    hdfile        => "$input/$ArchDir/sw00000003263xhd.hk.gz",
		    outdir        => "$output",
		    tamfile       => "CALDB",
		    outattfile    => "DEFAULT",
		    attfile       => "$input/$ArchDir/sw00000003263sat.fits.gz",
		    teldef        => "CALDB",
		    outtamfile    => "DEFAULT",
		    tamrefx1      => -99,
		    tamrefy1      => -99,
                    tamrefx2      => -99,
                    tamrefy2      => -99,
		    alignfile     => "CALDB",
		    interpolation => "CONSTANT",
 		    chatter       => $chat,
		    clobber       => "$clobber",
		    history       => "yes"
		    );
    $ut->runTask(%par_task)
	if $ut->isValid;
   
    
    if($ut->isValid)
    {
# fverify
	$ut->fverify("$output/sw00000003263sattm.fits");
	
	$ut->fverify("$output/sw00000003263xtmdtcr.fits");
        

# ftdiff
	$ut->ftdiff("$output/sw00000003263sattm.fits",
		    "$input/$ArchDir/ut_xrttamsattm.fits");
        
	$ut->ftdiff("$output/sw00000003263xtmdtcr.fits",
		    "$input/$ArchDir/ut_xrttamtmdtcr.fits");
	
    }
    $ut->delete();
}
