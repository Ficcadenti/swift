#!/usr/bin/perl
#
#  ut_xrthotpix
#
#
#
# Changes:
#           0.1.0 - 04/08/2004 - CS First working version
#           0.1.1 - 05/08/2004 - BS Adapted for 'xrthotpix' task
#           0.1.2 - 23/03/2005 - BS Added 'usegoodevt' input parameter
#           0.1.3 - 21/10/2005 - BS Added 'hotneigh' input parameter
#           0.1.4 - 27/10/2005 - BS Set to yes 'overstatus' parameter, added 
#                                   phamin and phamax input parameters
#           0.1.5 - 08/03/2007 - NS Added 'usecleanmap' input parameter
#                                   Set to yes 'iterate' parameter
#           0.1.6 - 02/04/2007 -    Removed 'usecleanmap' input parameter
#                              -    Added new input parameter 'gradeiterate'
#                                   

use strict;
use ut_xrtobj;

# main
{
# Object Istances
    my $ut = ut_xrtobj->new(
			    name    => "xrthotpix",
			    utname  => "ut_xrthotpix",
			    version => "0.1.6",
			    );
    
# Set Parameter
    #$ut->setParam("validate", 0);
    my $input = $ut->getParam("input_dir");
    my $output = $ut->getParam("output_dir") . "/" . $ut->getParam("utname");
    $ut->setParam("output_dir",$output);
    my $chat = $ut->getParam("chatter");
    my $clobber = $ut->getParam("clobber");

# I/O Directory Check
    $ut->checkIODirectory()
        if $ut->isValid;

# Environment check
    my @chk_env = ("LHEASOFT", "HEADAS");

    $ut->checkEnvironment(@chk_env)
        if $ut->isValid;
    
    my $ArchDir="ut_xrthotpix";
    
    
# Input Files Check
    my @chk_inp = ("$input/$ArchDir/sw00073232001xpcwnpouf.evt.gz"
		   );

    $ut->checkExist("Input", @chk_inp)
	if $ut->isValid;
    
# Prototype Check
   my @chk_proto = ("$input/$ArchDir/ut_xrthotpixpcwnpouf.evt",
                    "$input/$ArchDir/ut_xrthotpixpcwnpoufhp.fits"
		    );
    $ut->checkExist("Prototype", @chk_proto)
        if $ut->isValid;

# Executables Files Check
    my @chk_exe = ("xrthotpix","ftdiff","fverify", "pquery2");
    $ut->checkExecutable(@chk_exe)
        if $ut->isValid;
# Task Files Check
    my %par_task = (
		    infile       => "$input/$ArchDir/sw00073232001xpcwnpouf.evt.gz",
		    outfile      => "$output/sw00073232001xpcwnpouf.evt",
		    outbpfile    => "DEFAULT",
                    overstatus   => "yes",
		    usegoodevt   => "yes",
		    gradeiterate => "yes",
                    cellsize     => 5,
                    impfac       => 1000.0,
                    logpos       => -5.3,
                    bthresh      => 3,
		    phamin       => 0,
		    phamax       => 4095,
                    cleanflick   => "yes",
                    iterate      => "yes",
		    hotneigh     => "yes",
		    chatter      => $chat,
		    clobber      => "$clobber",
		    history      => "yes" 
		    );

    $ut->runTask(%par_task)
	if $ut->isValid;
    
# fverify
    if ($ut->isValid)
    {
       $ut->fverify("$output/sw00073232001xpcwnpouf.evt");
       $ut->fverify("$output/sw00073232001xpcwnpoufhp.fits");


# ftdiff
       $ut->ftdiff("$output/sw00073232001xpcwnpouf.evt",
		   "$input/$ArchDir/ut_xrthotpixpcwnpouf.evt");

       $ut->ftdiff("$output/sw00073232001xpcwnpoufhp.fits",
                  "$input/$ArchDir/ut_xrthotpixpcwnpoufhp.fits");
  
   }
    $ut->delete();
}
