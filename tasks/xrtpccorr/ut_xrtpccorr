#!/usr/bin/perl
#
#  ut_xrtpccorr
#
#
#
# Changes:
#           0.1.0 - 03/05/2007 - NS First working version
#

use strict;
use ut_xrtobj;

# main
{
# Object Istances
    my $ut = ut_xrtobj->new(
			    name    => "xrtpccorr",
			    utname  => "ut_xrtpccorr",
			    version => "0.1.0",
			    );
    
# Set Parameter
    #$ut->setParam("validate", 0);
    my $input = $ut->getParam("input_dir");
    my $output = $ut->getParam("output_dir") . "/" . $ut->getParam("utname");
    $ut->setParam("output_dir",$output);
    my $chat = $ut->getParam("chatter");
    my $clobber = $ut->getParam("clobber");
 
# I/O Directory Check
    $ut->checkIODirectory()
        if $ut->isValid;

# Environment check
    my @chk_env = ("LHEASOFT", "HEADAS");
    $ut->checkEnvironment(@chk_env)
        if $ut->isValid;
    
    my $ArchDir="ut_xrtpccorr";
    
    
# Input Files Check
    my @chk_inp = ("$input/$ArchDir/sw00030925001xpcw2po_uf.evt.gz",
		   );

    $ut->checkExist("Input", @chk_inp)
	if $ut->isValid;
    
# Prototype Check
   my @chk_proto = ("$input/$ArchDir/ut_xrtpccorr_xpcw2po_uf.evt",
		    );
    $ut->checkExist("Prototype", @chk_proto)
        if $ut->isValid;

# Executables Files Check
    my @chk_exe = ("xrtpccorr","ftdiff","fverify", "pquery2");
    $ut->checkExecutable(@chk_exe)
        if $ut->isValid;
# Task Files Check
    my %par_task = (
		    infile     => "$input/$ArchDir/sw00030925001xpcw2po_uf.evt.gz",
		    outfile    => "$output/sw00030925001xpcw2po_uf.evt",
		    srcdetx    => -1,
		    srcdety    => -1,
		    srcra      => -1,
		    srcdec     => -91,
		    ranom      => -1,
		    decnom     => -91,
		    teldef     => "CALDB",
		    aberration => "no",
		    attinterpol=> "no",
		    attfile    => "$input/$ArchDir/sw00030925001sat.fits.gz",
		    mkffile    => "$input/$ArchDir/sw00030925001s.mkf",
		    subimage   => "yes",
		    subimgsize => 100,
		    nevents    => 25,
		    lessevents => "no",
		    biasmethod => "MEDIAN",
		    badpix     => "yes",
		    grademin   => 0,
		    grademax   => 0,
		    chatter    => $chat,
		    clobber    => "$clobber",
		    history    => "yes" 
		    );

    $ut->runTask(%par_task)
	if $ut->isValid;
    if($ut->isValid)
    {
	
# fverify
	$ut->fverify("$output/sw00030925001xpcw2po_uf.evt");
	
	
# ftdiff
	$ut->ftdiff("$output/sw00030925001xpcw2po_uf.evt",
		    "$input/$ArchDir/ut_xrtpccorr_xpcw2po_uf.evt");
    }    
    
    $ut->delete();
}
